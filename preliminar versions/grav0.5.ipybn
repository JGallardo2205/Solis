{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "Figure.set() got an unexpected keyword argument 'color'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[4], line 189\u001b[0m\n\u001b[1;32m    186\u001b[0m     ax\u001b[38;5;241m.\u001b[39mlegend(fontsize\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m12\u001b[39m)\n\u001b[1;32m    188\u001b[0m \u001b[38;5;66;03m# Crear la animaciÃ³n\u001b[39;00m\n\u001b[0;32m--> 189\u001b[0m fig \u001b[38;5;241m=\u001b[39m \u001b[43mplt\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mfigure\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfigsize\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m10\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m10\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mblack\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m    190\u001b[0m ax \u001b[38;5;241m=\u001b[39m fig\u001b[38;5;241m.\u001b[39madd_subplot(\u001b[38;5;241m111\u001b[39m, projection\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m3d\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m    191\u001b[0m animation \u001b[38;5;241m=\u001b[39m FuncAnimation(fig, update, frames\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mlen\u001b[39m(t_span), fargs\u001b[38;5;241m=\u001b[39m(ax, x1_sol, y1_sol, z1_sol, x2_sol, y2_sol, z2_sol, x3_sol, y3_sol, z3_sol, x4_sol, y4_sol, z4_sol))\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/_api/deprecation.py:454\u001b[0m, in \u001b[0;36mmake_keyword_only.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    448\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m name_idx:\n\u001b[1;32m    449\u001b[0m     warn_deprecated(\n\u001b[1;32m    450\u001b[0m         since, message\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mPassing the \u001b[39m\u001b[38;5;132;01m%(name)s\u001b[39;00m\u001b[38;5;124m \u001b[39m\u001b[38;5;132;01m%(obj_type)s\u001b[39;00m\u001b[38;5;124m \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    451\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpositionally is deprecated since Matplotlib \u001b[39m\u001b[38;5;132;01m%(since)s\u001b[39;00m\u001b[38;5;124m; the \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    452\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mparameter will become keyword-only \u001b[39m\u001b[38;5;132;01m%(removal)s\u001b[39;00m\u001b[38;5;124m.\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m    453\u001b[0m         name\u001b[38;5;241m=\u001b[39mname, obj_type\u001b[38;5;241m=\u001b[39m\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mparameter of \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfunc\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m()\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m--> 454\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/pyplot.py:840\u001b[0m, in \u001b[0;36mfigure\u001b[0;34m(num, figsize, dpi, facecolor, edgecolor, frameon, FigureClass, clear, **kwargs)\u001b[0m\n\u001b[1;32m    830\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(allnums) \u001b[38;5;241m==\u001b[39m max_open_warning \u001b[38;5;241m>\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m    831\u001b[0m     _api\u001b[38;5;241m.\u001b[39mwarn_external(\n\u001b[1;32m    832\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMore than \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mmax_open_warning\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m figures have been opened. \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    833\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mFigures created through the pyplot interface \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    837\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mConsider using `matplotlib.pyplot.close()`.\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m    838\u001b[0m         \u001b[38;5;167;01mRuntimeWarning\u001b[39;00m)\n\u001b[0;32m--> 840\u001b[0m manager \u001b[38;5;241m=\u001b[39m \u001b[43mnew_figure_manager\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    841\u001b[0m \u001b[43m    \u001b[49m\u001b[43mnum\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfigsize\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfigsize\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdpi\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdpi\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    842\u001b[0m \u001b[43m    \u001b[49m\u001b[43mfacecolor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfacecolor\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43medgecolor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43medgecolor\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mframeon\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mframeon\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    843\u001b[0m \u001b[43m    \u001b[49m\u001b[43mFigureClass\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mFigureClass\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    844\u001b[0m fig \u001b[38;5;241m=\u001b[39m manager\u001b[38;5;241m.\u001b[39mcanvas\u001b[38;5;241m.\u001b[39mfigure\n\u001b[1;32m    845\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m fig_label:\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/pyplot.py:384\u001b[0m, in \u001b[0;36mnew_figure_manager\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    382\u001b[0m \u001b[38;5;250m\u001b[39m\u001b[38;5;124;03m\"\"\"Create a new figure manager instance.\"\"\"\u001b[39;00m\n\u001b[1;32m    383\u001b[0m _warn_if_gui_out_of_main_thread()\n\u001b[0;32m--> 384\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_get_backend_mod\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnew_figure_manager\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/backend_bases.py:3573\u001b[0m, in \u001b[0;36m_Backend.new_figure_manager\u001b[0;34m(cls, num, *args, **kwargs)\u001b[0m\n\u001b[1;32m   3571\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mmatplotlib\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mfigure\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m Figure\n\u001b[1;32m   3572\u001b[0m fig_cls \u001b[38;5;241m=\u001b[39m kwargs\u001b[38;5;241m.\u001b[39mpop(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mFigureClass\u001b[39m\u001b[38;5;124m'\u001b[39m, Figure)\n\u001b[0;32m-> 3573\u001b[0m fig \u001b[38;5;241m=\u001b[39m \u001b[43mfig_cls\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3574\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mcls\u001b[39m\u001b[38;5;241m.\u001b[39mnew_figure_manager_given_figure(num, fig)\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/_api/deprecation.py:454\u001b[0m, in \u001b[0;36mmake_keyword_only.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    448\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m name_idx:\n\u001b[1;32m    449\u001b[0m     warn_deprecated(\n\u001b[1;32m    450\u001b[0m         since, message\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mPassing the \u001b[39m\u001b[38;5;132;01m%(name)s\u001b[39;00m\u001b[38;5;124m \u001b[39m\u001b[38;5;132;01m%(obj_type)s\u001b[39;00m\u001b[38;5;124m \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    451\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpositionally is deprecated since Matplotlib \u001b[39m\u001b[38;5;132;01m%(since)s\u001b[39;00m\u001b[38;5;124m; the \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    452\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mparameter will become keyword-only \u001b[39m\u001b[38;5;132;01m%(removal)s\u001b[39;00m\u001b[38;5;124m.\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m    453\u001b[0m         name\u001b[38;5;241m=\u001b[39mname, obj_type\u001b[38;5;241m=\u001b[39m\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mparameter of \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfunc\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m()\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m--> 454\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/figure.py:2470\u001b[0m, in \u001b[0;36mFigure.__init__\u001b[0;34m(self, figsize, dpi, facecolor, edgecolor, linewidth, frameon, subplotpars, tight_layout, constrained_layout, layout, **kwargs)\u001b[0m\n\u001b[1;32m   2373\u001b[0m \u001b[38;5;129m@_api\u001b[39m\u001b[38;5;241m.\u001b[39mmake_keyword_only(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m3.6\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mfacecolor\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   2374\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__init__\u001b[39m(\u001b[38;5;28mself\u001b[39m,\n\u001b[1;32m   2375\u001b[0m              figsize\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   2386\u001b[0m              \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs\n\u001b[1;32m   2387\u001b[0m              ):\n\u001b[1;32m   2388\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   2389\u001b[0m \u001b[38;5;124;03m    Parameters\u001b[39;00m\n\u001b[1;32m   2390\u001b[0m \u001b[38;5;124;03m    ----------\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   2468\u001b[0m \u001b[38;5;124;03m        %(Figure:kwdoc)s\u001b[39;00m\n\u001b[1;32m   2469\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 2470\u001b[0m     \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[38;5;21;43m__init__\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2471\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_layout_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   2473\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m layout \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/figure.py:203\u001b[0m, in \u001b[0;36mFigureBase.__init__\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    201\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstale \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m    202\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msuppressComposite \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m--> 203\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mset\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/artist.py:147\u001b[0m, in \u001b[0;36mArtist.__init_subclass__.<locals>.<lambda>\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    139\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mhasattr\u001b[39m(\u001b[38;5;28mcls\u001b[39m\u001b[38;5;241m.\u001b[39mset, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m_autogenerated_signature\u001b[39m\u001b[38;5;124m'\u001b[39m):\n\u001b[1;32m    140\u001b[0m     \u001b[38;5;66;03m# Don't overwrite cls.set if the subclass or one of its parents\u001b[39;00m\n\u001b[1;32m    141\u001b[0m     \u001b[38;5;66;03m# has defined a set method set itself.\u001b[39;00m\n\u001b[1;32m    142\u001b[0m     \u001b[38;5;66;03m# If there was no explicit definition, cls.set is inherited from\u001b[39;00m\n\u001b[1;32m    143\u001b[0m     \u001b[38;5;66;03m# the hierarchy of auto-generated set methods, which hold the\u001b[39;00m\n\u001b[1;32m    144\u001b[0m     \u001b[38;5;66;03m# flag _autogenerated_signature.\u001b[39;00m\n\u001b[1;32m    145\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m\n\u001b[0;32m--> 147\u001b[0m \u001b[38;5;28mcls\u001b[39m\u001b[38;5;241m.\u001b[39mset \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mlambda\u001b[39;00m \u001b[38;5;28mself\u001b[39m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs: \u001b[43mArtist\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mset\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    148\u001b[0m \u001b[38;5;28mcls\u001b[39m\u001b[38;5;241m.\u001b[39mset\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mset\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    149\u001b[0m \u001b[38;5;28mcls\u001b[39m\u001b[38;5;241m.\u001b[39mset\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__qualname__\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mcls\u001b[39m\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__qualname__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m.set\u001b[39m\u001b[38;5;124m\"\u001b[39m\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/artist.py:1231\u001b[0m, in \u001b[0;36mArtist.set\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m   1227\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mset\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[1;32m   1228\u001b[0m     \u001b[38;5;66;03m# docstring and signature are auto-generated via\u001b[39;00m\n\u001b[1;32m   1229\u001b[0m     \u001b[38;5;66;03m# Artist._update_set_signature_and_docstring() at the end of the\u001b[39;00m\n\u001b[1;32m   1230\u001b[0m     \u001b[38;5;66;03m# module.\u001b[39;00m\n\u001b[0;32m-> 1231\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_internal_update\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcbook\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnormalize_kwargs\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/artist.py:1223\u001b[0m, in \u001b[0;36mArtist._internal_update\u001b[0;34m(self, kwargs)\u001b[0m\n\u001b[1;32m   1216\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_internal_update\u001b[39m(\u001b[38;5;28mself\u001b[39m, kwargs):\n\u001b[1;32m   1217\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   1218\u001b[0m \u001b[38;5;124;03m    Update artist properties without prenormalizing them, but generating\u001b[39;00m\n\u001b[1;32m   1219\u001b[0m \u001b[38;5;124;03m    errors as if calling `set`.\u001b[39;00m\n\u001b[1;32m   1220\u001b[0m \n\u001b[1;32m   1221\u001b[0m \u001b[38;5;124;03m    The lack of prenormalization is to maintain backcompatibility.\u001b[39;00m\n\u001b[1;32m   1222\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 1223\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_update_props\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1224\u001b[0m \u001b[43m        \u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;132;43;01m{cls.__name__}\u001b[39;49;00m\u001b[38;5;124;43m.set() got an unexpected keyword argument \u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\n\u001b[1;32m   1225\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;132;43;01m{prop_name!r}\u001b[39;49;00m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/.local/lib/python3.10/site-packages/matplotlib/artist.py:1197\u001b[0m, in \u001b[0;36mArtist._update_props\u001b[0;34m(self, props, errfmt)\u001b[0m\n\u001b[1;32m   1195\u001b[0m             func \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mset_\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mk\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m)\n\u001b[1;32m   1196\u001b[0m             \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m callable(func):\n\u001b[0;32m-> 1197\u001b[0m                 \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mAttributeError\u001b[39;00m(\n\u001b[1;32m   1198\u001b[0m                     errfmt\u001b[38;5;241m.\u001b[39mformat(\u001b[38;5;28mcls\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mtype\u001b[39m(\u001b[38;5;28mself\u001b[39m), prop_name\u001b[38;5;241m=\u001b[39mk))\n\u001b[1;32m   1199\u001b[0m             ret\u001b[38;5;241m.\u001b[39mappend(func(v))\n\u001b[1;32m   1200\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m ret:\n",
      "\u001b[0;31mAttributeError\u001b[0m: Figure.set() got an unexpected keyword argument 'color'"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib\n",
    "matplotlib.use('Agg')  # O el backend que sea adecuado para tu sistema\n",
    "import matplotlib.pyplot as plt\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "from matplotlib.animation import FuncAnimation\n",
    "from IPython.display import HTML\n",
    "\n",
    "# Datos\n",
    "UA = 1.496e11  # Unidad astronÃ³mica en metros\n",
    "# Constantes del sistema Marte-Tierra-Venus\n",
    "M1 = 6.4171e23  # Masa de Marte\n",
    "M2 = 5.972e24   # Masa Tierra\n",
    "M3 = 5.6e26     # Masa Saturno\n",
    "M4 = 1.898e27   # Masa JÃºpiter\n",
    "Ms = 1.989e30  # Masa del Sol\n",
    "\n",
    "G = 6.67430e-11  # Constante gravitacional (m^3 kg^â1 s^â2)\n",
    "\n",
    "# FunciÃ³n de ecuaciones diferenciales en coordenadas polares\n",
    "def FourBodyEquations(t, w):\n",
    "    r1, theta1, r2, theta2, r3, theta3, r4, theta4, r_center_x, r_center_y, dr1dt, dtheta1dt, dr2dt, dtheta2dt, dr3dt, dtheta3dt, dr4dt, dtheta4dt, dr_center_x_dt, dr_center_y_dt = w\n",
    "\n",
    "    # Distancias entre los cuerpos\n",
    "    r12 = np.linalg.norm(np.array([r2 - r1, 0.0]))\n",
    "    r13 = np.linalg.norm(np.array([r3 - r1, 0.0]))\n",
    "    r14 = np.linalg.norm(np.array([r4 - r1, 0.0]))\n",
    "    r23 = np.linalg.norm(np.array([r3 - r2, 0.0]))\n",
    "    r24 = np.linalg.norm(np.array([r4 - r2, 0.0]))\n",
    "    r34 = np.linalg.norm(np.array([r4 - r3, 0.0]))\n",
    "    r_center = np.linalg.norm(np.array([r_center_x, r_center_y]))\n",
    "\n",
    "    epsilon = 1e-6  # PequeÃ±o valor para evitar divisiones por distancias cercanas a cero\n",
    "\n",
    "    # Ecuaciones de aceleraciÃ³n en coordenadas polares\n",
    "    dv1bydt = (G * (M2 / (r12 + epsilon)**3) * np.array([r2 - r1, 0.0]) +\n",
    "               G * (M3 / (r13 + epsilon)**3) * np.array([r3 - r1, 0.0]) +\n",
    "               G * (M4 / (r14 + epsilon)**3) * np.array([r4 - r1, 0.0]) +\n",
    "               G * (Ms / (r_center + epsilon)**3) * np.array([-r_center_x, -r_center_y]))\n",
    "\n",
    "    dv2bydt = (G * (M1 / (r12 + epsilon)**3) * np.array([r1 - r2, 0.0]) +\n",
    "               G * (M3 / (r23 + epsilon)**3) * np.array([r3 - r2, 0.0]) +\n",
    "               G * (M4 / (r24 + epsilon)**3) * np.array([r4 - r2, 0.0]) +\n",
    "               G * (Ms / (r_center + epsilon)**3) * np.array([-r_center_x, -r_center_y]))\n",
    "\n",
    "    dv3bydt = (G * (M1 / (r13 + epsilon)**3) * np.array([r1 - r3, 0.0]) +\n",
    "               G * (M2 / (r23 + epsilon)**3) * np.array([r2 - r3, 0.0]) +\n",
    "               G * (M4 / (r34 + epsilon)**3) * np.array([r4 - r3, 0.0]) +\n",
    "               G * (Ms / (r_center + epsilon)**3) * np.array([-r_center_x, -r_center_y]))\n",
    "\n",
    "    dv4bydt = (G * (M1 / (r14 + epsilon)**3) * np.array([r1 - r4, 0.0]) +\n",
    "               G * (M2 / (r24 + epsilon)**3) * np.array([r2 - r4, 0.0]) +\n",
    "               G * (M3 / (r34 + epsilon)**3) * np.array([r3 - r4, 0.0]) +\n",
    "               G * (Ms / (r_center + epsilon)**3) * np.array([-r_center_x, -r_center_y]))\n",
    "\n",
    "    # Ecuaciones de velocidad en coordenadas polares\n",
    "    dr1bydt = dr1dt\n",
    "    dtheta1bydt = dtheta1dt\n",
    "    dr2bydt = dr2dt\n",
    "    dtheta2bydt = dtheta2dt\n",
    "    dr3bydt = dr3dt\n",
    "    dtheta3bydt = dtheta3dt\n",
    "    dr4bydt = dr4dt\n",
    "    dtheta4bydt = dtheta4dt\n",
    "\n",
    "    # AÃ±adir las ecuaciones para la posiciÃ³n de la estrella central\n",
    "    dr_center_x_by_dt = dr_center_x_dt\n",
    "    dr_center_y_by_dt = dr_center_y_dt\n",
    "\n",
    "    return [dr1bydt, dtheta1bydt, dr2bydt, dtheta2bydt, dr3bydt, dtheta3bydt, dr4bydt, dtheta4bydt, dr_center_x_by_dt, dr_center_y_by_dt, dv1bydt[0], dv1bydt[1], dv2bydt[0], dv2bydt[1], dv3bydt[0], dv3bydt[1], dv4bydt[0], dv4bydt[1], 0, 0]\n",
    "\n",
    "# Condiciones iniciales y no dimensionalizaciÃ³n\n",
    "r1 = 2.2739e+11  # posiciÃ³n inicial en coordenadas polares (r, Î¸)\n",
    "r2 = 1.496e+11\n",
    "r3 = 1.421e+12\n",
    "r4 = 7.779e+11  # posiciÃ³n inicial de JÃºpiter\n",
    "v1 = np.array([29.78* 1e3, 0.001])  # velocidad inicial en coordenadas polares (dr/dt, dÎ¸/dt)\n",
    "v2 = np.array([24.07* 1e3, 0.001])\n",
    "v3 = np.array([9.68* 1e3, 0.001])\n",
    "v4 = np.array([13.07* 1e3, 0.001])  # velocidad inicial de JÃºpiter\n",
    "\n",
    "w0 = [r1, 0, r2, 0, r3, 0, r4, 0, 0, 0, v1[0], v1[1], v2[0], v2[1], v3[0], v3[1], v4[0], v4[1], 0, 0]\n",
    "t_span = np.linspace(0, 1, 1000) * 365.25 * 24 * 3600  # convertido a segundos\n",
    "\n",
    "# ResoluciÃ³n de las ecuaciones diferenciales utilizando RK4\n",
    "dt = t_span[1] - t_span[0]  # dt constante\n",
    "\n",
    "solution = np.zeros((len(t_span), len(w0)))\n",
    "solution[0] = w0\n",
    "\n",
    "for i in range(1, len(t_span)):\n",
    "    k1 = FourBodyEquations(t_span[i - 1], solution[i - 1])\n",
    "    k2 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k1[j] for j in range(len(k1))])\n",
    "    k3 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k2[j] for j in range(len(k2))])\n",
    "    k4 = FourBodyEquations(t_span[i - 1] + dt, [solution[i - 1][j] + dt * k3[j] for j in range(len(k3))])\n",
    "\n",
    "    solution[i] = [solution[i - 1][j] + dt/6 * (k1[j] + 2*k2[j] + 2*k3[j] + k4[j]) for j in range(len(k4))]\n",
    "\n",
    "\n",
    "solution = np.zeros((len(t_span), len(w0)))\n",
    "solution[0] = w0\n",
    "\n",
    "for i in range(1, len(t_span)):\n",
    "    k1 = FourBodyEquations(t_span[i - 1], solution[i - 1])\n",
    "    k2 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k1[j] for j in range(len(k1))])\n",
    "    k3 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k2[j] for j in range(len(k2))])\n",
    "    k4 = FourBodyEquations(t_span[i - 1] + dt, [solution[i - 1][j] + dt * k3[j] for j in range(len(k3))])\n",
    "\n",
    "    solution[i] = [solution[i - 1][j] + dt/6 * (k1[j] + 2*k2[j] + 2*k3[j] + k4[j]) for j in range(len(k4))]\n",
    "\n",
    "\n",
    "solution = np.zeros((len(t_span), len(w0)))\n",
    "solution[0] = w0\n",
    "\n",
    "for i in range(1, len(t_span)):\n",
    "    k1 = FourBodyEquations(t_span[i - 1], solution[i - 1])\n",
    "    k2 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k1[j] for j in range(len(k1))])\n",
    "    k3 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k2[j] for j in range(len(k2))])\n",
    "    k4 = FourBodyEquations(t_span[i - 1] + dt, [solution[i - 1][j] + dt * k3[j] for j in range(len(k3))])\n",
    "\n",
    "    solution[i] = [solution[i - 1][j] + dt/6 * (k1[j] + 2*k2[j] + 2*k3[j] + k4[j]) for j in range(len(k4))]\n",
    "\n",
    "\n",
    "solution = np.zeros((len(t_span), len(w0)))\n",
    "solution[0] = w0\n",
    "\n",
    "for i in range(1, len(t_span)):\n",
    "    k1 = FourBodyEquations(t_span[i - 1], solution[i - 1])\n",
    "    k2 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k1[j] for j in range(len(k1))])\n",
    "    k3 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k2[j] for j in range(len(k2))])\n",
    "    k4 = FourBodyEquations(t_span[i - 1] + dt, [solution[i - 1][j] + dt * k3[j] for j in range(len(k3))])\n",
    "\n",
    "    solution[i] = [solution[i - 1][j] + dt/6 * (k1[j] + 2*k2[j] + 2*k3[j] + k4[j]) for j in range(len(k4))]\n",
    "\n",
    "# ResoluciÃ³n de las ecuaciones diferenciales en coordenadas polares\n",
    "solution = np.zeros((len(t_span), len(w0)))\n",
    "solution[0] = w0\n",
    "\n",
    "for i in range(1, len(t_span)):\n",
    "    \n",
    "    k1 = FourBodyEquations(t_span[i - 1], solution[i - 1])\n",
    "    k2 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k1[j] for j in range(len(k1))])\n",
    "    k3 = FourBodyEquations(t_span[i - 1] + dt/2, [solution[i - 1][j] + dt/2 * k2[j] for j in range(len(k2))])\n",
    "    k4 = FourBodyEquations(t_span[i - 1] + dt, [solution[i - 1][j] + dt * k3[j] for j in range(len(k3))])\n",
    "    solution[i] = [solution[i - 1][j] + dt/6 * (k1[j] + 2*k2[j] + 2*k3[j] + k4[j]) for j in range(len(k4))]\n",
    "\n",
    "\n",
    "# Extraer resultados en coordenadas polares\n",
    "r1_sol = np.array([[solution[i][0], solution[i][1]] for i in range(len(solution))])\n",
    "r2_sol = np.array([[solution[i][2], solution[i][3]] for i in range(len(solution))])\n",
    "r3_sol = np.array([[solution[i][4], solution[i][5]] for i in range(len(solution))])\n",
    "r4_sol = np.array([[solution[i][6], solution[i][7]] for i in range(len(solution))])\n",
    "\n",
    "# Convertir coordenadas polares a cartesianas para la visualizaciÃ³n en 3D\n",
    "x1_sol = r1_sol[:, 0] * np.cos(r1_sol[:, 1])\n",
    "y1_sol = r1_sol[:, 0] * np.sin(r1_sol[:, 1])\n",
    "z1_sol = np.zeros_like(x1_sol)\n",
    "\n",
    "x2_sol = r2_sol[:, 0] * np.cos(r2_sol[:, 1])\n",
    "y2_sol = r2_sol[:, 0] * np.sin(r2_sol[:, 1])\n",
    "z2_sol = np.zeros_like(x2_sol)\n",
    "\n",
    "x3_sol = r3_sol[:, 0] * np.cos(r3_sol[:, 1])\n",
    "y3_sol = r3_sol[:, 0] * np.sin(r3_sol[:, 1])\n",
    "z3_sol = np.zeros_like(x3_sol)\n",
    "\n",
    "x4_sol = r4_sol[:, 0] * np.cos(r4_sol[:, 1])\n",
    "y4_sol = r4_sol[:, 0] * np.sin(r4_sol[:, 1])\n",
    "z4_sol = np.zeros_like(x4_sol)\n",
    "\n",
    "# FunciÃ³n para actualizar la animaciÃ³n\n",
    "def update(frame, ax, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4):\n",
    "    ax.cla()\n",
    "    ax.plot(x1[:frame], y1[:frame], z1[:frame], label=\"Mars\")\n",
    "    ax.plot(x2[:frame], y2[:frame], z2[:frame], label=\"Earth\")\n",
    "    ax.plot(x3[:frame], y3[:frame], z3[:frame], label=\"Venus\")\n",
    "    ax.plot(x4[:frame], y4[:frame], z4[:frame], label=\"Jupiter\")\n",
    "    ax.scatter(x1[frame-1], y1[frame-1], z1[frame-1], color=\"darkred\", marker=\"o\", s=80, label=\"Mars\")\n",
    "    ax.scatter(x2[frame-1], y2[frame-1], z2[frame-1], color=\"darkblue\", marker=\"o\", s=80, label=\"Earth\")\n",
    "    ax.scatter(x3[frame-1], y3[frame-1], z3[frame-1], color=\"purple\", marker=\"o\", s=80, label=\"Saturn\")\n",
    "    ax.scatter(x4[frame-1], y4[frame-1], z4[frame-1], color=\"#FFA500\", marker=\"o\", s=80, label=\"Jupiter\")\n",
    "    ax.set_xlabel(\"x-coordinate\", fontsize=14)\n",
    "    ax.set_ylabel(\"y-coordinate\", fontsize=14)\n",
    "    ax.set_zlabel(\"z-coordinate\", fontsize=14)\n",
    "    ax.set_title(f\"The four-body problem for the Mars-Earth-Jupiter-Saturn system (Frame {frame})\", fontsize=14)\n",
    "    ax.legend(fontsize=12)\n",
    "\n",
    "# Crear la animaciÃ³n\n",
    "fig = plt.figure(figsize=(10, 10))\n",
    "ax = fig.add_subplot(111, projection=\"3d\")\n",
    "animation = FuncAnimation(fig, update, frames=len(t_span), fargs=(ax, x1_sol, y1_sol, z1_sol, x2_sol, y2_sol, z2_sol, x3_sol, y3_sol, z3_sol, x4_sol, y4_sol, z4_sol))\n",
    "\n",
    "# Asignar la animaciÃ³n a una variable\n",
    "anim = animation\n",
    "# Mostrar la animaciÃ³n en el entorno de IPython/Jupyter Notebook\n",
    "HTML(animation.to_jshtml())\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
